npx create-react-app lemonade-stand --> Create a React folder

npm start is how we run the react app

code . --> Open Visual Studio in the current directory

React is all JavaScript, src is where the "React" occurs

index.html -> index.js -> 

We had function and class based components --> functional couldn't manage state
React 16 --> Allow hooks, which allow us to connect to state from a function componenet

EACH JSX can return a SINGLE COMPONENT

Reduce returns a brand new array without mutating the original array

DONT HAVE THE SAME CLASSNAME WHEN USING BASIC CSS STYLESHEETS

EVERY STYLESHEET IMPORTED --> ~~ COMBINED INTO ONE GLOBAL STYLE SHEET AND SHARED WITH EVERY OTHER componenet

Modular css --> Gives each componenet its own css
Product.css --> Product.module.css

!!! import styles from './Product.module.css'
className='Product' --> {styles.Product}

In countStyle = {
    align-items <--WE HAVE A HYPHEN 
    --> alignItems
}

npm install styled-components

Using colors.co 

CSS: Overflow --> Anything overflow from the orginal div, make it hidden

JavaScript reduce --> 

const array = [1, 2, 3, 4];

const reducer = (accumulator, currentValue) => accumulator + currentValue; // 1 + 2 + 3 + 4

console.log(array.reduce(reducer)); //10

JavaScripts wants to have something in the array when we map it --> use fill to fill the array with undefined